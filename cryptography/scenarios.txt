1. Alice wants to send Bob a long message, and she doesn't want Eve to be able to read it. (I say "Eve" here because I want you to assume for this scenario that person-in-the-middle is impossible, and give an answer that is as simple as possible under that assumption.)
    Alice and Bob use Diffie-Hellman to agree on a shared secret key K, then Alice uses the function S(subscript K)(M) to encrypt the message to send to Bob. This plan achieves our goal of Alice sending a message to Bob without Eve being able to read it because Alice and Bob have exchanged a secret key K through Diffie-Hellman where Eve cannot access this key. Thus, when Alice uses the agreed upon key K to encrypt the message, Eve is unable to decrypt and read it.

2. Alice wants to send Bob a long message. She doesn't want Mal to be able to intercept, read, and modify the message without Bob detecting the change.
    For this situation, Alice must protect the confidentiality and integrity of the message. In order to to this, Alice could use Diffie-Hellman to exchange keys with Bob. Then, Alice will send over d, which is equal to H(M) concatenated with S(subscript K)(M). This solution protects the confidentiality and integrity of the message M because Bob will be able to compare the message with D and ensure that it has not been changed by Mal. Mal cannot read the message either because Mal does not have the secret key that has been exchanged through Diffie-Hellman.

3. Alice wants to send Bob a long message, she doesn't want Eve to be able to read it, and she wants Bob to have confidence that it was Alice who sent the message. (Again, don't worry about Mal and person-in-the-middle here.)
    Alice needs to protect the confidentiality and authenticity of the message. Alice and Bob will exchange a key K using Diffie-Hellman, then Alice will encrypt the message using the symmetric encryption function S(subscript K)(M). Then, Alice will use the hash function H(M) to find D. Next, she will create her digital signature by calculating E(S(subscript A), D). Finally, she will send over the encrypted message S(subscript K)(M) concatenated with her digital signature. Since Alice uses the key K that her and Bob secretly agreed upon using Diffie-Hellman, Eve will not be able to read the message. Using the hash function to create her digital signature, Alice also ensures Bob will be able to have the confidence that it was Alice who sent the message to him.

4.Alice wants to send Bob a long message (in this case, it's a contract between AliceCom and BobCom). She doesn't want Eve to be able to read it. She wants Bob to have confidence that it was Alice who sent the message. She doesn't want Bob to be able to change the document and claim successfully in court that the changed version was the real version. And finally, Bob doesn't want Alice to be able to say in court that she never sent the contract in the first place.
    Alice and Bob agree on a secret key K using Diffie-Hellman. Alice then encrypts the message using S(subscript K)(M) so that Eve cannot read it. Alice then uses the hash function H(M) to get D and calculates her digital signature E(S(subscript A), D). She sends the encrypted message to Bob concatenated with her digital signature. Using the secret key K ensures Eve will not be able to read the message. Using the hash function to find D and creating a digital signature ensures both that the message has not been modified by anyone other than Alice, and Bob has proof that it was Alice who sent him the message, so Alice cannot claim she never sent it.
